
<?php
// === CONFIGURACIÓN DEL TEMA === //
function bypat_theme_setup() {
    add_theme_support('menus');
    register_nav_menus(array(
        'primary' => __('Primary Menu', 'bypat'),
        'footer' => __('Footer Menu', 'bypat'),
    ));
    add_theme_support('title-tag');
    add_theme_support('post-thumbnails');
    add_theme_support('html5', array('search-form', 'comment-form', 'gallery', 'caption'));
    add_theme_support('custom-logo', array(
        'height' => 100,
        'width' => 400,
        'flex-height' => true,
        'flex-width' => true,
    ));
}
add_action('after_setup_theme', 'bypat_theme_setup');

// === CARGAR ESTILOS Y SCRIPTS === //
function bypat_enqueue_scripts() {
    wp_enqueue_style(
        'tailwind-style',
        get_template_directory_uri() . '/style.css',
        array(),
        filemtime(get_template_directory() . '/style.css')
    );

    wp_enqueue_script(
        'matrix-script',
        get_template_directory_uri() . '/js/matrix.js',
        array(),
        filemtime(get_template_directory() . '/js/matrix.js'),
        true
    );
}
add_action('wp_enqueue_scripts', 'bypat_enqueue_scripts');

<footer class="bg-gray-800 text-gray-400 py-6">
    <div class="container mx-auto text-center">
        <p class="text-sm">
            Copyright © 1989 – <?php echo date("Y"); ?> PAT. All Rights Reserved.
        </p>
    </div>
</footer>
<?php wp_footer(); ?>
</body>
</html>

<!DOCTYPE html>
<html <?php language_attributes(); ?>>
<head>
    <meta charset="<?php bloginfo('charset'); ?>">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <?php wp_head(); ?>
</head>
<body <?php body_class(); ?>>
<header class="bg-gray-900 text-white">
    <div class="container mx-auto px-4 py-4 flex justify-between items-center">
        <a href="<?php echo home_url(); ?>" class="text-xl font-bold">ByPat</a>
        <button id="menu-toggle" class="block lg:hidden">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-7 6h7"></path>
            </svg>
        </button>
        <nav id="menu" class="hidden lg:flex space-x-4">
            <?php
            wp_nav_menu(array(
                'theme_location' => 'primary',
                'menu_class' => 'flex space-x-4',
                'container' => false,
            ));
            ?>
        </nav>
    </div>
</header>
<section class="relative h-screen flex items-center justify-center text-center text-white">
    <!-- Video de fondo -->
    <video
        class="absolute top-0 left-0 w-full h-full object-cover"
        autoplay
        muted
        loop
        playsinline
        poster="<?php echo get_template_directory_uri(); ?>screenshot.png"
    >
        <source src="<?php echo get_template_directory_uri(); ?>/matrixpat.mp4" type="video/mp4">
        Tu navegador no soporta videos HTML5.
    </video>

    <!-- Contenido del Hero -->
    <div class="relative z-10">
        <h1 class="text-4xl md:text-6xl font-bold mb-4">Hey, I Am Pat</h1>
        <p id="dynamic-role" class="text-xl md:text-2xl font-light">Loading...</p>
        <button class="mt-4 px-6 py-2 bg-blue-500 text-white rounded hover:bg-blue-700">
            Register
        </button>
    </div>
</section>

<video
    class="absolute top-0 left-0 w-full h-full object-cover"
    autoplay
    muted
    loop
    playsinline
    
>
    <source src="<?php echo get_template_directory_uri(); ?>/matrixpat.mp4" type="video/mp4">
    Tu navegador no soporta videos HTML5.
</video>
<?php /* Template Name: Home */ ?>
<?php get_header(); ?>
<canvas id="matrixCanvas"></canvas>

<div id="hero-section"></div>


<?php get_footer(); ?>

document.addEventListener("DOMContentLoaded", function () {
    const roles = [
        "💻 Full Stack Web Developer",
        "🖥️ System and Server Administrator",
        "🌐 Network and Telecommunications Specialist",
        "📱 Community Manager",
        "📂 IT Project Manager",
        "🎨 UX/UI Designer",
        "📐 3D Modeler",
        "🚁 Drone Operator and Aerial Data Analyst",
        "🔒 Cybersecurity Consultant",
        "👨‍💻 Software Engineer"
    ];
    let roleIndex = 0;

    function typeRole() {
        const roleElement = document.getElementById("dynamic-role");
        const currentRole = roles[roleIndex];
        roleElement.textContent = "";
        let charIndex = 0;

        function typeChar() {
            if (charIndex < currentRole.length) {
                roleElement.textContent += currentRole[charIndex];
                charIndex++;
                setTimeout(typeChar, 100);
            } else {
                roleIndex = (roleIndex + 1) % roles.length;
                setTimeout(() => eraseRole(roleElement), 2000);
            }
        }

        typeChar();
    }

    function eraseRole(element) {
        const currentText = element.textContent;
        if (currentText.length > 0) {
            element.textContent = currentText.slice(0, -1);
            setTimeout(() => eraseRole(element), 100);
        } else {
            typeRole();
        }
    }

    typeRole();
});

@tailwind base;
@tailwind components;
@tailwind utilities;
@tailwind base;
@tailwind components;
@tailwind utilities;

document.addEventListener("DOMContentLoaded", () => {
    const isMobile = window.innerWidth < 768;
    if (!isMobile) {
        const videoElement = document.querySelector("video");
        if (videoElement) {
            videoElement.src = "../hero.mp4"; // Cambia por la ruta real
        }
    }

    // Manejo del menú hamburguesa
    const menuToggle = document.getElementById("menu-toggle");
    const menu = document.getElementById("menu");

    if (menuToggle && menu) {
        menuToggle.addEventListener("click", () => {
            menu.classList.toggle("hidden");
        });
    }
});
document.addEventListener("DOMContentLoaded", function () {
    const canvas = document.getElementById("matrix");
    const ctx = canvas.getContext("2d");

    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;

    const characters = "0123456789ABCDEFGHIJKLMNOPQRSTUVXYZ@#$%^&*()";
    const fontSize = 16;
    const columns = canvas.width / fontSize;

    // Array para almacenar la posición Y de cada columna
    const drops = Array(Math.floor(columns)).fill(0);

    function draw() {
        // Fondo negro translúcido para el efecto "fade"
        ctx.fillStyle = "rgba(0, 0, 0, 0.05)";
        ctx.fillRect(0, 0, canvas.width, canvas.height);

        // Configuración del texto
        ctx.fillStyle = "#0F0"; // Verde estilo Matrix
        ctx.font = `${fontSize}px monospace`;

        drops.forEach((y, i) => {
            const text = characters[Math.floor(Math.random() * characters.length)];
            const x = i * fontSize;
            ctx.fillText(text, x, y * fontSize);

            // Reiniciar columna si se sale de pantalla o al azar
            if (y * fontSize > canvas.height || Math.random() > 0.975) {
                drops[i] = 0;
            }

            drops[i]++;
        });
    }

    setInterval(draw, 50);

    // Actualizar tamaño del lienzo al redimensionar la ventana
    window.addEventListener("resize", () => {
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
    });
});
